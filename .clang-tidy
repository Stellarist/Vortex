Checks:
	clang-analyzer-core.BitwiseShift,
	clang-analyzer-core.CallAndMessage,
	clang-analyzer-core.DivideZero,
	clang-analyzer-core.NonNullParamChecker,
	clang-analyzer-core.NullDereference,
	clang-analyzer-core.StackAddressEscape,
	clang-analyzer-core.UndefinedBinaryOperatorResult,
	clang-analyzer-core.VLASize,
	clang-analyzer-core.uninitialized.ArraySubscript,
	clang-analyzer-core.uninitialized.Assign,
	clang-analyzer-core.uninitialized.Branch,
	clang-analyzer-core.uninitialized.CapturedBlockVariable,
	clang-analyzer-core.uninitialized.UndefReturn,
	clang-analyzer-core.uninitialized.NewArraySize,

	clang-analyzer-cplusplus.ArrayDelete,
	clang-analyzer-cplusplus.InnerPointer,
	clang-analyzer-cplusplus.Move,
	clang-analyzer-cplusplus.NewDelete,
	clang-analyzer-cplusplus.NewDeleteLeaks,
	clang-analyzer-cplusplus.PlacementNew,
	clang-analyzer-cplusplus.SelfAssignment,
	clang-analyzer-cplusplus.StringChecker,

	clang-analyzer-deadcode.DeadStores,
	clang-analyzer-deadcode.UnreachableCode,
	clang-analyzer-deadcode.UnreachableReturn,
	clang-analyzer-deadcode.UndefinedBinaryOperatorResult,

	clang-analyzer-nullability.NullPassedToNonnull,
	clang-analyzer-nullability.NullReturnedFromNonnull,
	clang-analyzer-nullability.NullableDereferenced,
	clang-analyzer-nullability.NullablePassedToNonnull,
	clang-analyzer-nullability.NullableReturnedFromNonnull,

	clang-analyzer-optin.cplusplus.UninitializedObject,
	clang-analyzer-optin.cplusplus.VirtualCall,
	clang-analyzer-optin.performance.Padding,
	clang-analyzer-optin.portability.UnixAPI,
	clang-analyzer-optin.core.EnumCastOutOfRange,

	clang-analyzer-security.MmapWriteExec,
	clang-analyzer-security.FloatLoopCounter,
	clang-analyzer-security.insecureAPI.bcmp,
	clang-analyzer-security.insecureAPI.bcopy,
	clang-analyzer-security.insecureAPI.bzero,
	clang-analyzer-security.insecureAPI.getpw,
	clang-analyzer-security.insecureAPI.gets,
	clang-analyzer-security.insecureAPI.mkstemp,
	clang-analyzer-security.insecureAPI.mktemp,
	clang-analyzer-security.insecureAPI.rand,
	clang-analyzer-security.insecureAPI.strcpy,
	clang-analyzer-security.insecureAPI.vfork,
	clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,
	
	clang-analyzer-unix.API,
	clang-analyzer-unix.Malloc,
	clang-analyzer-unix.MallocSizeof,
	clang-analyzer-unix.MismatchedDeallocator,
	clang-analyzer-unix.cstring.BadSizeArg,
	clang-analyzer-unix.cstring.NullArg,
	clang-analyzer-unix.StdCLibraryFunctions,
	clang-analyzer-unix.BlockInCriticalSection,
	
	google-build-explicit-make-pair,
	google-build-namespaces,
	google-default-arguments,
	google-readability-casting,
	google-runtime-int,
	google-runtime-operator,

	readability-const-return-type,
	readability-container-size-empty,
	readability-convert-member-functions-to-static,
	readability-delete-null-pointer,
	readability-make-member-function-const,
	readability-misplaced-array-index,
	readability-qualified-auto,
	readability-redundant-access-specifiers,
	readability-redundant-control-flow,
	readability-redundant-function-ptr-dereference,
	readability-redundant-smartptr-get,
	readability-redundant-string-cstr,
	readability-redundant-string-init,
	readability-static-definition-in-anonymous-namespace,
	readability-string-compare,
	readability-uniqueptr-delete-release,
	readability-simplify-boolean-expr,
	readability-inconsistent-declaration-parameter-name,
	readability-identifier-naming,
	readability-avoid-const-params-in-decls,

	cert-dcl50-cpp,
	cert-env33-c,
	cert-err34-c,
	cert-err52-cpp,
	cert-flp30-c,
	cert-oop58-cpp,
	cert-dcl58-cpp,
	cert-fio38-c,
	cert-msc32-c,
	cert-oop11-cpp, 

	modernize-avoid-bind,
	modernize-deprecated-headers,
	modernize-loop-convert,
	modernize-make-shared,
	modernize-make-unique,
	modernize-pass-by-value,
	modernize-raw-string-literal,
	modernize-redundant-void-arg,
	modernize-replace-auto-ptr,
	modernize-shrink-to-fit,
	modernize-use-auto,
	modernize-use-bool-literals,
	modernize-use-default,
	modernize-use-emplace,
	modernize-use-equals-delete,
	modernize-use-nullptr,
	modernize-use-override,
	modernize-use-using,
	modernize-use-equals-default,
	modernize-concat-nested-namespaces,
	modernize-return-braced-init-list,
	modernize-use-constraints,

	cppcoreguidelines-narrowing-conversions,
	cppcoreguidelines-pro-type-member-init,
	cppcoreguidelines-avoid-goto,
	cppcoreguidelines-init-variables,
	cppcoreguidelines-interfaces-global-init,
	cppcoreguidelines-no-malloc,
	cppcoreguidelines-prefer-member-initializer,
	cppcoreguidelines-slicing,
	cppcoreguidelines-special-member-functions,
	cppcoreguidelines-avoid-non-const-global-variables,
	cppcoreguidelines-avoid-c-arrays,
	cppcoreguidelines-macro-usage,    
	cppcoreguidelines-owning-memory,

	misc-throw-by-value-catch-by-reference,
	misc-redundant-expression,
	misc-static-assert,
	misc-uniqueptr-reset-release,
	misc-unused-alias-decls,
	misc-unused-using-decls,
	misc-const-correctness,
	misc-definitions-in-headers,
	misc-confusable-identifiers,
	misc-header-include-cycle,
	misc-misplaced-const, 

	bugprone-undelegated-constructor,
	bugprone-macro-parentheses,
	bugprone-forward-declaration-namespace,
	bugprone-bool-pointer-implicit-conversion,
	bugprone-misplaced-widening-cast,
	bugprone-argument-comment,
	bugprone-copy-constructor-init,
	bugprone-dangling-handle,
	bugprone-fold-init-type,
	bugprone-inaccurate-erase,
	bugprone-incorrect-roundings,
	bugprone-integer-division,
	bugprone-move-forwarding-reference,
	bugprone-multiple-statement-macro,
	bugprone-parent-virtual-call,
	bugprone-reserved-identifier,
	bugprone-signed-char-misuse,
	bugprone-sizeof-container,
	bugprone-sizeof-expression,
	bugprone-string-constructor,
	bugprone-string-integer-assignment,
	bugprone-suspicious-enum-usage,
	bugprone-suspicious-include,
	bugprone-suspicious-memset-usage,
	bugprone-suspicious-string-compare,
	bugprone-swapped-arguments,
	bugprone-throw-keyword-missing,
	bugprone-too-small-loop-variable,
	bugprone-undefined-memory-manipulation,
	bugprone-unhandled-self-assignment,
	bugprone-unused-raii,
	bugprone-unused-return-value,
	bugprone-use-after-move,
	bugprone-virtual-near-miss,

	performance-faster-string-find,
	performance-for-range-copy,
	performance-implicit-conversion-in-loop,
	performance-inefficient-algorithm,
	performance-inefficient-vector-operation,
	performance-move-constructor-init,
	performance-no-automatic-move,
	performance-trivially-destructible,
	performance-unnecessary-copy-initialization,
	performance-enum-size,
	performance-noexcept-move-constructor,

	portability-restrict-system-includes,
	portability-simd-intrinsics,  

	concurrency-mt-unsafe  

CheckOptions:
  - key: readability-identifier-naming.NamespaceCase
    value: CamelCase
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.FunctionCase
    value: camelBack
  - key: readability-identifier-naming.VariableCase
    value: lower_case
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.ConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.EnumConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.GlobalConstantCase
    value: UPPER_CASE

HeaderFilterRegex: '.*'
FormatStyle: file
